import logging
import random
import os

from pytube import YouTube
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.utils.exceptions import NetworkError
from aiogram.dispatcher.filters import Text

from keyboard import main_keyboard, download_video_ikb, keyboard_cancel_keyboard
from other import is_youtube_url, convert_time, LIST_OF_ANSWER, HELP_TEXT, DESCTIPTION_TEXT, TEXT_INSTRUCTIONS
from config import TOKEN_API


class ProfileState(StatesGroup):
    """–ö–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
    url_video = State()


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–∞ Bot –∏ Dispatcher –∏ MemoryStorage
storage = MemoryStorage()
bot = Bot(TOKEN_API)
dp = Dispatcher(bot, storage= MemoryStorage())

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ª–æ–≥ –∏ –∑–∞–¥–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger()
logger.setLevel(logging.INFO)

# –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤—â–∏–∫–∞ –¥–ª—è logger
handler = logging.FileHandler(f"tgBot.log", mode='a', encoding='utf-8')
formatter = logging.Formatter("%(asctime)s  %(levelname)s  %(message)s")

# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤—â–∏–∫–∞ –∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
handler.setFormatter(formatter)
# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫ –ª–æ–≥–≥–µ—Ä—É
logger.addHandler(handler)

# –°–ª–æ–≤–∞—Ä—å –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏(–∏ –≤–∏–¥–µ–æ –∫–æ—Ç–æ—Ä–æ–µ –æ–Ω–∏ —Å–∫–∞—á–∏–≤–∞—é—Ç(–ª–∏))
active_users = {}


async def on_startup(_):
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –≤–æ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"""
    print("–¢–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")

@dp.message_handler(Text(equals= '–ü—Ä–∏–≤–µ—Ç!'))
async def test_equals(message: types.Message):
    """–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏–º–µ–Ω–Ω–æ —Ç–µ–∫—Å—Ç
    –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç—Å—ã–ª–∞—Ç—å—Å—è –±–æ—Ç—É, –∞ –Ω–µ –∫–æ–º–∞–Ω–¥—ã"""
    await message.answer("–ò —Ç–µ–±–µ –Ω–µ —Ö–≤–∞—Ä–∞—Ç—å, –¥—Ä—É–≥")

@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    """–•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start"""
    username = message.from_user.username
    active_users[f'last_down_video_{message.from_user.username}'] = None
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–≤–µ–ª —Å–≤–æ–µ –∏–º—è, –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–º—É –∑–Ω–∞—á–µ–Ω–∏–µ "–î—Ä—É–≥"
    if username == None:
        username = '–î—Ä—É–≥'
    
    START_TEXT = f"""–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é <b>{username}</b>
–° –ø–æ–º–æ—â—å—é –¥–∞–Ω–Ω–æ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–∞, —Ç—ã —Å–º–æ–∂–µ—à—å —Å–∫–∞—á–∏–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ –ª—é–±—ã–µ –≤–∏–¥–µ–æ –≤–∏–¥–µ–æ —Å Youtube.
–í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, —Å—Ä–∞–∑—É –ø–∏—à–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞ - @makcum6"""

    await bot.send_sticker(chat_id=message.chat.id,
                        sticker='CAACAgIAAxkBAAEIf5NkMHhR_xuJLsLEKwP_g0QDaBLIXAACzhkAAlPHqEkTwUAIA_EBDy8E')
    await bot.send_message(chat_id=message.chat.id,
                        text=START_TEXT,
                        parse_mode='HTML',
                        reply_markup= main_keyboard())
    await message.delete()

    logging.info(f"""{username} ----- –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª —Ñ—É–Ω–∫—Ü–∏—é /start
–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç ----> {active_users}""")

@dp.message_handler(commands=["download_video"])
async def download_video(message: types.Message):
    await bot.send_message(chat_id= message.chat.id,
                        text='–ß—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ, —Å–∫–∏–Ω—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–æ–ª–∏–∫!',
                        reply_markup= keyboard_cancel_keyboard())
    await ProfileState.url_video.set() # –í–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "url_video"

    logging.info(f"""{message.from_user.username} ----- –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª —Ñ—É–Ω–∫—Ü–∏—é /download_video
–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç ----> {active_users}""")

@dp.message_handler(content_types=['text'], state=ProfileState.url_video)
async def url_video_state(message: types.Message, state: FSMContext):
    url = message.text
    if url == '–û–¢–ú–ï–ù–ê‚ùå':
        await bot.send_message(chat_id= message.chat.id,
                        text= "–í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...",
                        reply_markup= main_keyboard())
        await state.finish() # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É –û–¢–ú–ï–ù–ê‚ùå, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    else:
        async with state.proxy() as data:
            data['url_video'] = url

        if is_youtube_url(url) == False:
            await message.answer(f"""
URL - {url} ------> 
–î–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–µ –≤–µ–¥–µ—Ç –Ω–∞ —Å–∞–π—Ç YouTube, –ø–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É""")
        else:                         
            yt = YouTube(url)
            await message.answer(text="–ò–¥–µ—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—èüëª")
            video = yt.streams.get_highest_resolution()

            # –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –±—É–¥–µ—Ç —Ç–∞–∫–∏–º –∂–µ –∫–∞–∫ –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ YouTube
            sent_video = f"{yt.title}.mp4" 
            video.download(filename= sent_video)

            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–∫–∞—á–∞–≤—à–µ–≥–æ –≤–∏–¥–µ–æ –≤ —Å–ª–æ–≤–∞—Ä—å –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–π
            active_users[f'last_down_video_{message.from_user.username}' ] = url
            
            logging.info(f"""{message.from_user.username} ----- –Ω–∞—á–∞–ª —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ {url}
–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç ----> {active_users}""")
                
            with open(sent_video, 'rb') as video_file:
                await bot.send_video(chat_id=message.chat.id,
                                        video=video_file,
                                        caption= f"""
üé• –ù–∞–∑–≤–∞–Ω–∏–µ - {yt.title}
üë• –ê–≤—Ç–æ—Ä - {yt.author}

üßëüèª‚Äçüíª –ë—ã–ª–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ - {str(yt.publish_date)[0:10]} 
üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ - {yt.views}
üëÆüèª‚Äç‚ôÄÔ∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å - {convert_time(yt.length)}""")

            os.remove(sent_video) # –£–¥–∞–ª—è–µ–º —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏

            await bot.send_message(chat_id = message.chat.id,
                                        text= TEXT_INSTRUCTIONS,
            parse_mode= 'HTML',
            reply_markup = main_keyboard())
                # –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥—ã download_video, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
                
            logging.info(f"{message.from_user.username} ----- —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–ª –≤–∏–¥–µ–æ‚úÖ")

            await bot.send_message(chat_id= message.chat.id,
                                        text="–°–ø–∞—Å–∏–±–æ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞, –∫–∞–∫ —Ç–µ–±–µ —Å–∞–º –±–æ—Ç?",
                                        reply_markup= download_video_ikb())
            await state.finish()

@dp.message_handler(commands= ['help'])
async def help_command(message: types.Message):
    """–•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã help""" 
    await bot.send_sticker(chat_id = message.chat.id,
                        sticker= 'CAACAgIAAxkBAAEIkX5kOERfeEDieT-rpQbxFb_6Xh_0GgACGhkAAkdGqUnDFGIOpJAMEy8E')
    await bot.send_message(chat_id = message.chat.id,
                        text = HELP_TEXT,
                        parse_mode = 'HTML')
    
    logging.info(f"""{message.from_user.username} ----- –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª —Ñ—É–Ω–∫—Ü–∏—é /help
–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç ----> {active_users}""")

@dp.message_handler(commands= ['description'])
async def description_command(message: types.Message):
    """–•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /description"""
    await bot.send_sticker(chat_id = message.chat.id,
                        sticker= 'CAACAgIAAxkBAAEInNNkPM75NTAkdlcoq9odZQUB0XLCeQAC5hUAAmRYqEnLZGWnzmR7-y8E')
    await bot.send_message(chat_id = message.chat.id,
                        text= DESCTIPTION_TEXT,
                        parse_mode= 'HTML')
    
    logging.info(f"""{message.from_user.username} ----- –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª —Ñ—É–Ω–∫—Ü–∏—é /description
    –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç ----> {active_users}    """)

@dp.message_handler()
async def noy_name_message(message: types.Message):
    """–•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª–∞–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
    # C–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if message.text != ['/help', '/description', '/download_video', '/start']:
        random_offer = random.choice(LIST_OF_ANSWER) # –î–æ—Å—Ç–∞–µ–º —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞
        await message.answer(text= random_offer)

    logging.info(f"""{message.from_user.username} ----- {message.text}
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É""")

@dp.callback_query_handler()
async def callback_data(callback: types.CallbackQuery):
    """–ö–∞–ª–±–µ–∫ —Ö–µ–Ω–¥–ª–µ—Ä, –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–ª–±–µ–∫–æ–≤"""
    if callback.data == 'LikeAnswer':
        await callback.answer("–°–ø–∞—Å–∏–±–æ :)")
    if callback.data == 'DislikeAnswer':
        await callback.answer("–û—á–µ–Ω—å –∂–∞–ª–∫–æ :(, –Ω–∞–ø–∏—à–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É @makcum6")


if __name__ == '__main__':
    executor.start_polling(dispatcher= dp,
                           skip_updates= True,
                           on_startup= on_startup)
